package{		import flash.events.Event;	import flash.media.Sound;	import flash.media.SoundChannel;	import flash.media.SoundTransform;	public class AudioHandler	{		public static var backgroundAmbience:HighwayTraffic;		public static var backgroundMusic:BackgroundMusic;		public static var motorcycleHum:MotorcycleLoopMid;		public static var motorcycleRoar:MotorcycleLoopFast;				public static var motorcycleRevSFX:MotorcycleRevSFX;				public static var carHonk1SFX;		public static var carHonk2SFX;		public static var carHonk3SFX;		public static var carHonk4SFX;		public static var carHonk5SFX;		//		public static var perfectSFX:PerfectSFX;//		public static var highSFX:HighSFX;//		public static var normSFX:NormSFX;//		public static var loseSFX:LoseSFX;//		public static var jumpSFX:JumpSFX;//		public static var coinSFX:CoinSFX;		//bgm for BackGround Music		public static var bgmSoundChannel:SoundChannel;			public static var bgAmbienceSoundChannel:SoundChannel;			//bgm for motorcycle loop		public static var motorcycleHumSoundChannel:SoundChannel;		public static var motorcycleRoarSoundChannel:SoundChannel;		//bgm for sfx		public static var sfxSoundChannel:SoundChannel;			//for muting...		public static var musicVolume:SoundTransform;		public static var sfxVolume:SoundTransform;				public static var motorcycleMidVolume:SoundTransform;		public static var motorcycleFastVolume:SoundTransform;				public static function init():void		{			trace("setup audio handler");						//play the music			musicVolume = new SoundTransform();			musicVolume.volume = 1;						sfxVolume = new SoundTransform();			sfxVolume.volume = 1;						// setup motorcycle background loops			motorcycleMidVolume = new SoundTransform();			motorcycleFastVolume = new SoundTransform();			motorcycleMidVolume.volume = 1;			motorcycleFastVolume.volume = (1 - motorcycleMidVolume.volume);											}				//begins the music and creates a listener to loop it		public static function playMusic():void {						backgroundMusic = new BackgroundMusic();			bgmSoundChannel = backgroundMusic.play();			bgmSoundChannel.soundTransform = musicVolume;			bgmSoundChannel.addEventListener( Event.SOUND_COMPLETE, onBackgroundMusicFinished );					}		//when the music is done, play it again...		public static function onBackgroundMusicFinished( event:Event ):void {						bgmSoundChannel = backgroundMusic.play();			bgmSoundChannel.soundTransform = musicVolume;			bgmSoundChannel.addEventListener( Event.SOUND_COMPLETE, onBackgroundMusicFinished );				}				//begins the music and creates a listener to loop it		public static function playAmbience():void {						backgroundAmbience = new HighwayTraffic();			bgAmbienceSoundChannel = backgroundAmbience.play();			bgAmbienceSoundChannel.soundTransform = musicVolume;			bgAmbienceSoundChannel.addEventListener( Event.SOUND_COMPLETE, onAmbienceFinished );					}		//when the music is done, play it again...		public static function onAmbienceFinished( event:Event ):void {						bgAmbienceSoundChannel = backgroundAmbience.play();			bgAmbienceSoundChannel.soundTransform = musicVolume;			bgAmbienceSoundChannel.addEventListener( Event.SOUND_COMPLETE, onAmbienceFinished );				}				//begins the music and creates a listener to loop it		public static function playMotorcycleHum():void {						motorcycleHum = new MotorcycleLoopMid();			motorcycleHumSoundChannel = motorcycleHum.play();			motorcycleHumSoundChannel.soundTransform = motorcycleMidVolume;			motorcycleHumSoundChannel.addEventListener( Event.SOUND_COMPLETE, onMotorcycleHumFinished );					}		//when the music is done, play it again...		public static function onMotorcycleHumFinished( event:Event ):void {						motorcycleHumSoundChannel = motorcycleHum.play();			motorcycleHumSoundChannel.soundTransform = motorcycleMidVolume;			motorcycleHumSoundChannel.addEventListener( Event.SOUND_COMPLETE, onMotorcycleHumFinished );				}				//begins the music and creates a listener to loop it		public static function playMotorcycleRoar():void {						motorcycleRoar = new MotorcycleLoopFast();			motorcycleRoarSoundChannel = motorcycleRoar.play();			motorcycleRoarSoundChannel.soundTransform = motorcycleFastVolume;			motorcycleRoarSoundChannel.addEventListener( Event.SOUND_COMPLETE, onMotorcycleRoarFinished );					}		//when the music is done, play it again...		public static function onMotorcycleRoarFinished( event:Event ):void {						motorcycleRoarSoundChannel = motorcycleRoar.play();			motorcycleRoarSoundChannel.soundTransform = motorcycleFastVolume;			motorcycleRoarSoundChannel.addEventListener( Event.SOUND_COMPLETE, onMotorcycleRoarFinished );				}				public static function playMotorcycleRevSFX():void{						motorcycleRevSFX = new MotorcycleRevSFX();			sfxSoundChannel = motorcycleRevSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}				public static function playRandomCarHonkSFX():void {			var randIndex:int = Math.ceil(Math.random() * 4);			if (randIndex == 1) {				playCarHonk1SFX();			} else if (randIndex == 2) {				playCarHonk2SFX();			} else if (randIndex == 3) {				playCarHonk3SFX();			} else {				playCarHonk4SFX();			}		}				public static function playCarHonk1SFX():void{			carHonk1SFX = new CarHonk1();			sfxSoundChannel = carHonk1SFX.play();			sfxSoundChannel.soundTransform = sfxVolume;		}		public static function playCarHonk2SFX():void{			carHonk2SFX = new CarHonk2();			sfxSoundChannel = carHonk2SFX.play();			sfxSoundChannel.soundTransform = sfxVolume;		}		public static function playCarHonk3SFX():void{			carHonk3SFX = new CarHonk3();			sfxSoundChannel = carHonk3SFX.play();			sfxSoundChannel.soundTransform = sfxVolume;		}		public static function playCarHonk4SFX():void{			carHonk4SFX = new CarHonk4();			sfxSoundChannel = carHonk4SFX.play();			sfxSoundChannel.soundTransform = sfxVolume;		}		public static function playCarHonk5SFX():void{			carHonk5SFX = new CarHonk5();			sfxSoundChannel = carHonk5SFX.play();			sfxSoundChannel.soundTransform = sfxVolume;		}				/*public static function playPerfectSFX():void{						perfectSFX = new PerfectSFX();			sfxSoundChannel = perfectSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}				public static function playHighSFX():void{						highSFX = new HighSFX();			sfxSoundChannel = highSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}				public static function playNormSFX():void{						normSFX = new NormSFX();			sfxSoundChannel = normSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}				public static function playLoseSFX():void{						loseSFX = new LoseSFX();			sfxSoundChannel = loseSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}				public static function playJumpSFX():void{						jumpSFX = new JumpSFX();			sfxSoundChannel = jumpSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}						public static function playCoinSFX():void{						coinSFX = new CoinSFX();			sfxSoundChannel = coinSFX.play();			sfxSoundChannel.soundTransform = sfxVolume;					}*/						public static function changeMuteMusic():void		{			if(musicVolume.volume == 1){							   // first set the var for use with other sound clips			   musicVolume.volume = 0;			   // now reset the soundTransform obj of the soundClip			   bgmSoundChannel.soundTransform = musicVolume;			   			   trace("Mute Music!");							} else {							   // first set the var for use with other sound clips			   musicVolume.volume = 1;			   // now reset the soundTransform obj of the soundClip			   bgmSoundChannel.soundTransform = musicVolume;			   			   trace("Unmute Music!");			}		}		public static function changeMuteSFX():void		{			if(sfxVolume.volume == 1){							   // first set the var for use with other sound clips			   sfxVolume.volume = 0;			   // now reset the soundTransform obj of the soundClip			   //sfxSoundChannel.soundTransform = sfxVolume;			   			   trace("Mute SFX!");							} else {							   // first set the var for use with other sound clips			   sfxVolume.volume = 1;			   // now reset the soundTransform obj of the soundClip			   //sfxSoundChannel.soundTransform = sfxVolume;			   			   trace("Unmute SFX!");			}		}				public static function setMusicVolume(value:Number):void		{			if(value < 0){				value = 0;			} else if(value > 1){				value = 1;			}						musicVolume.volume = value;						bgmSoundChannel.soundTransform = musicVolume;			bgAmbienceSoundChannel.soundTransform = musicVolume;						trace("Set music volume to " + musicVolume.volume);		}		public static function setSFXVolume(value:Number):void		{			if(value < 0){				value = 0;			} else if(value > 1){				value = 1;			}						sfxVolume.volume = value;						//sfxSoundChannel.soundTransform = sfxVolume;						trace("Set sfx volume to " + sfxVolume.volume);		}				public static function setMotorcycleFastVolume(value:Number):void		{			//trace("value = " + value);						if(value < 0){				value = 0;			} else if(value > 1){				value = 1;			}						motorcycleFastVolume.volume = 0.75 * value * sfxVolume.volume;			motorcycleMidVolume.volume = 0.5 * (1.0 - value) * sfxVolume.volume;						// now reset the soundTransform obj of the soundClip			motorcycleHumSoundChannel.soundTransform = motorcycleMidVolume;			motorcycleRoarSoundChannel.soundTransform = motorcycleFastVolume;						//sfxSoundChannel.soundTransform = sfxVolume;						//trace("Set fast volume to " + motorcycleFastVolume.volume);			//trace("Set mid volume to " + motorcycleMidVolume.volume);		}			}}